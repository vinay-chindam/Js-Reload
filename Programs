

def roman_integer(s):
    ans=0
    hm = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
    ans+=hm[s[-1]]
    for i in range(len(s)-2,-1,-1):
        if(hm[s[i]]<hm[s[i+1]]):
            ans-=hm[s[i]]
        else:
            ans+=hm[s[i]]
    return ans
    
def check(n):
    hm = {1000: 'M', 900: 'CM', 500: 'D', 400: 'CD',
                    100: 'C', 90: 'XC', 50: 'L', 40: 'XL',
                    10: 'X', 9: 'IX', 5: 'V', 4: 'IV', 1: 'I'}
    ans=""
    for i in hm:
        cnt=n//i
        ans=ans+hm[i]*cnt
        n=n%i
    return ans


print(check(1994))
        
print(roman_integer("MCMXCIV"))



	1. Prefix Sum
2. Two Pointers
3. Sliding Window
4. Fast & Slow Pointers
5. LinkedList In-place Reversal
6. Monotonic Stack
7. Top â€˜Kâ€™ Elements
8. Overlapping Intervals
9. Modified Binary Search
10. Binary Tree Traversal
11. Depth-First Search (DFS)
12. Breadth-First Search (BFS)
13. Matrix Traversal
14. Backtracking
15. Dynamic Programming Patterns
